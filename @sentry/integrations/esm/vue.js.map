{"version":3,"file":"vue.js","sourceRoot":"","sources":["../src/vue.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, isPlainObject, logger } from '@sentry/utils';\n\n/** JSDoc */\ninterface Metadata {\n  [key: string]: any;\n  componentName?: string;\n  propsData?: {\n    [key: string]: any;\n  };\n  lifecycleHook?: string;\n}\n\n/** JSDoc */\nexport class Vue implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Vue.id;\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Vue';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _Vue: any; // tslint:disable-line:variable-name\n\n  /**\n   * When set to false, Sentry will suppress reporting all props data\n   * from your Vue components for privacy concerns.\n   */\n  private readonly _attachProps: boolean = true;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { Vue?: any; attachProps?: boolean } = {}) {\n    // tslint:disable-next-line: no-unsafe-any\n    this._Vue = options.Vue || getGlobalObject<any>().Vue;\n    if (options.attachProps === false) {\n      this._attachProps = false;\n    }\n  }\n\n  /** JSDoc */\n  private _formatComponentName(vm: any): string {\n    // tslint:disable:no-unsafe-any\n\n    if (vm.$root === vm) {\n      return 'root instance';\n    }\n    const name = vm._isVue ? vm.$options.name || vm.$options._componentTag : vm.name;\n    return (\n      (name ? `component <${name}>` : 'anonymous component') +\n      (vm._isVue && vm.$options.__file ? ` at ${vm.$options.__file}` : '')\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    // tslint:disable:no-unsafe-any\n\n    if (!this._Vue || !this._Vue.config) {\n      logger.error('VueIntegration is missing a Vue instance');\n      return;\n    }\n\n    const oldOnError = this._Vue.config.errorHandler;\n\n    this._Vue.config.errorHandler = (error: Error, vm: { [key: string]: any }, info: string): void => {\n      const metadata: Metadata = {};\n\n      if (isPlainObject(vm)) {\n        metadata.componentName = this._formatComponentName(vm);\n\n        if (this._attachProps) {\n          metadata.propsData = vm.$options.propsData;\n        }\n      }\n\n      if (info !== void 0) {\n        metadata.lifecycleHook = info;\n      }\n\n      if (getCurrentHub().getIntegration(Vue)) {\n        // This timeout makes sure that any breadcrumbs are recorded before sending it off the sentry\n        setTimeout(() => {\n          getCurrentHub().withScope(scope => {\n            scope.setContext('vue', metadata);\n            getCurrentHub().captureException(error);\n          });\n        });\n      }\n\n      if (typeof oldOnError === 'function') {\n        oldOnError.call(this._Vue, error, vm, info);\n      }\n    };\n  }\n}\n"]}